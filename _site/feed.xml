<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-06-15T12:22:53-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jesse Schauer</title><subtitle>One-man dev shop. The merc they call in to get stuff done. I build trust, not just code.</subtitle><entry><title type="html">How I Filtered 1,000+ Job Alert Emails with Python and AI</title><link href="http://localhost:4000/automation/ai/job-search/2025/06/04/job-filtering.html" rel="alternate" type="text/html" title="How I Filtered 1,000+ Job Alert Emails with Python and AI" /><published>2025-06-04T00:00:00-05:00</published><updated>2025-06-04T00:00:00-05:00</updated><id>http://localhost:4000/automation/ai/job-search/2025/06/04/job-filtering</id><content type="html" xml:base="http://localhost:4000/automation/ai/job-search/2025/06/04/job-filtering.html"><![CDATA[<p>Job hunting gets noisy fast. I built a Python script using the Microsoft Graph API and some local LLM logic to classify and sort all my job alert emails from several job boards into folders — tagging them as review, ignore, or priority.</p>]]></content><author><name></name></author><category term="automation" /><category term="ai" /><category term="job-search" /><summary type="html"><![CDATA[Job hunting gets noisy fast. I built a Python script using the Microsoft Graph API and some local LLM logic to classify and sort all my job alert emails from several job boards into folders — tagging them as review, ignore, or priority.]]></summary></entry></feed>